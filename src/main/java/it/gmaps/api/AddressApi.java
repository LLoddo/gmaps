/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package it.gmaps.api;

import it.gmaps.model.Address;
import it.gmaps.model.FormattedAddress;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-03-16T12:00:33.636+01:00[Europe/Berlin]")
@Validated
@Api(value = "address", description = "the address API")
public interface AddressApi {

    default AddressApiDelegate getDelegate() {
        return new AddressApiDelegate() {};
    }

    /**
     * POST /address : Obtain a well-formatted address from gMaps Address Validation API
     * obtain an address
     *
     * @param address address object (required)
     * @return Successful operation (status code 200)
     */
    @ApiOperation(value = "Obtain a well-formatted address from gMaps Address Validation API", nickname = "getFormattedAddress", notes = "obtain an address", response = FormattedAddress.class, tags={ "gmaps", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = FormattedAddress.class) })
    @PostMapping(
        value = "/address",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<FormattedAddress> getFormattedAddress(@ApiParam(value = "address object" ,required=true )  @Valid @RequestBody Address address) {
        return getDelegate().getFormattedAddress(address);
    }

}
